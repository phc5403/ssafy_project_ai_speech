"""
Django settings for Django_Data project.
Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'  #
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'  # s3


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECRET_KEY = "django-insecure-3phox3!_#-7ty#yeu*wuni_if48m^he2ym7$7#$7xz-%7nj3rs"

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&fn1&3$q!j)2(p^-f@3f^=$%9)^mbd!gzh$5-7z4$fw$2myvh+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# CORS_ORIGIN_WHITELIST = []  # 선언 하지 않고 기본값 사용
CORS_ALLOW_ALL_ORIGINS = True  # CORS : 모든 포트 허용

# Application definition

CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
)

# CORS_ALLOW_HEADERS = ()  # 선언 하지 않고 기본값 사용

INSTALLED_APPS = [
    "corsheaders",  # CORS 설정
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'voiceData.apps.VoicedataConfig',  # App 등록
    'rest_framework',  # restframework 등록
    'storages',  # s3 설정
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # CORS 설정(최상단)
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# AWS S3 설정
AWS_ACCESS_KEY_ID = 'AKIAW3MECNPMTQYOQY6F'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'perfectfitssafy'
AWS_S3_REGION_NAME = 'ap-northeast-2'
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

ROOT_URLCONF = "Django_Data.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Django_Data.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'perfectfit',
        'USER': 'ssafy',
        'PASSWORD': 'ssafy',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging 설정
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'color': {
            '()': 'colorlog.ColoredFormatter',
            'format': '%(log_color)s%(levelname)s:%(name)s:%(message)s',
        },
    },
    'handlers': {
        'console': {  # or file
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',  # console
            'formatter': 'color',
            # 'class': 'logging.FileHandler',  # or file
            # 'filename': os.path.join(BASE_DIR, 'debug.log'),  # or file
        }
    },
    'loggers': {
        '': {  # Use an appropriate name for your logger
            'handlers': ['console'],  # or file
            'level': 'DEBUG',  # (DEBUG, INFO, WARNING, ERROR, CRITICAL)
            'propagate': True,
        },
    },
}

